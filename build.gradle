plugins {
    id 'fabric-loom' version '0.4.3'
    id 'maven-publish'
    id "co.riiid.gradle" version "0.4.2"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.wynprice.cursemaven" version "2.1.0"
}

repositories {
    maven{ url="https://minecraft.curseforge.com/api/maven" }
    maven{ url="https://maven.jamieswhiteshirt.com/libs-release/" }
    maven{ url="https://maven.fabricmc.net" }
    maven { url = "https://maven.swordglowsblue.com" }
    maven { url = 'http://maven.sargunv.s3-website-us-west-2.amazonaws.com/' }
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
	maven { url "https://dl.bintray.com/shedaniel/autoconfig1u/" }
    maven {
        name = "NerdHubMC"
        url = "https://maven.abusedmaster.xyz/"
    }

	maven { url = "https://jitpack.io"}
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
def buildnumber = ""
def gittoken = System.getenv('GH_TOKEN')
if (System.getenv('TRAVIS_BUILD_NUMBER') == "null" || System.getenv('TRAVIS_BUILD_NUMBER') == null) {
    buildnumber = project.beta_version
} else {
    buildnumber = System.getenv('TRAVIS_BUILD_NUMBER')
}
def buildbranch = System.getenv('TRAVIS_BRANCH')

archivesBaseName = project.archives_base_name
version = project.mod_version + "+build." + buildnumber
group = project.maven_group

minecraft {
    accessWidener = file("src/main/resources/raa.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "com.github.oliviathevampire:artifice:de0027817f"
    include ("com.github.oliviathevampire:artifice:de0027817f")

    modImplementation "com.github.vampire-studios:VampireLib-Fabric:${project.vampirelib_version}"
    include "com.github.vampire-studios:VampireLib-Fabric:${project.vampirelib_version}"

    modImplementation "com.github.vampire-studios:Customized-Astral-Body:7b8ce81062"
    include "com.github.vampire-studios:Customized-Astral-Body:7b8ce81062"

    modCompile("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
        exclude module: "fabric-api"
    }
    include("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
        exclude module: "fabric-api"
    }

    modCompile "me.shedaniel.cloth:config-2:${project.cloth_config_version}"
    include ("me.shedaniel.cloth:config-2:${project.cloth_config_version}") {
        exclude group :"net.fabricmc.fabric-api"
    }

    modCompile ("com.github.vampire-studios:Spontaneous-Bucketing:1.1.2-20w16a") {
        exclude group :"com.lettuce.fudge"
    }

    modImplementation ("io.github.cottonmc:Jankson-Fabric:2.0.1+j1.2.0") {
        force = true
    }

//    modRuntime "curse.maven:immersive-portals-mod:2945189"

    include ("me.zeroeightsix:fiber:0.6.0-7") {
        exclude group :"net.fabricmc.fabric-api"
    }

    modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"

    modImplementation("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
        exclude group: "io.github.prospector.modmenu"
        exclude group :"net.fabricmc.fabric-api"
    }

//    modRuntime ("com.github.mrmangohands:sodium-fabric:97650e1acce5a34460b8d6946430171cff6e3d8a")
    modRuntime ("com.github.SuperCoder7979:phosphor-fabric:11d964bf07d44bdf6cbdbb7cce25ed9da81d9f78")
    modRuntime ("com.github.jellysquid3:lithium-fabric:21769c40c5")

    modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:${project.fabric_shield_lib_version}"
    modImplementation "com.github.SuperCoder7979:cavebiomes:8a8a3d691c"
}

github {
    owner = 'vampire-studios'
    repo = 'Randomly-Adding-Anything'
    token = gittoken ?: "a key"
    tagName = version + "-" + project.minecraft_version.replace(" ", "-")
    name = version + "-" + "MC" + project.minecraft_version.replace(" ", "-")
    targetCommitish = buildbranch
    prerelease = true
    assets = [
            "build/libs/${archivesBaseName}-${version}-dev.jar",
            "build/libs/${archivesBaseName}-${version}.jar",
            "build/libs/${archivesBaseName}-${version}-sources-dev.jar",
            "build/libs/${archivesBaseName}-${version}-sources.jar"
    ]
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

curseforge {
    apiKey = System.getenv('CURSEKEY') ?: "a key"
    project {
        id = "341464"
        releaseType = "release"
        changelog = project.changelog
        gameVersionStrings.clear()
        gameVersionStrings.add("1.16")
        gameVersionStrings.add("1.16-Snapshot")
        gameVersionStrings.add("Fabric")
        mainArtifact(file("build/libs/${archivesBaseName}-${version}.jar")) {
            displayName = "[" + minecraft_version + "] " + version
            relations {
                requiredDependency "fabric-api"
                embeddedLibrary "auto-config"
            }
        }
    }
    options{
        forgeGradleIntegration = false
    }
}
